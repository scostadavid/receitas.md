---
import Layout from '../../layouts/Layout.astro';
import Navbar from '../../components/Navbar.astro';
import Footer from '../../components/Footer.astro';

export async function getStaticPaths() {
  const recipeModules = import.meta.glob('../../content/recipes/**/*.md', { eager: true });

  const allRecipes = Object.entries(recipeModules).map(([filePath, module]: [string, any]) => ({
    ...module.frontmatter,
    Content: module.default,
    filePath,
    slug: filePath.split('/').pop().replace('.md', ''),
  }));

  const authors = Array.from(new Set(allRecipes.map(r => r.author)));

  return authors.map(author => ({
    params: { author },
    props: {
      author,
      recipes: allRecipes.filter(r => r.author === author),
      recipesCount: allRecipes.length,
    },
  }));
}

// Props da página
const { author, recipes, recipesCount } = Astro.props;

const lastUpdate = recipes
  .map(r => new Date(r.date))
  .sort((a, b) => b.getTime() - a.getTime())[0]
  ?.toISOString()
  .split('T')[0] || '—';
---

<Layout title={`Receitas de ${author} - Receitas Markdown`}>
  <Navbar recipesCount={recipesCount} lastUpdate={lastUpdate} />

  <main class="max-w-4xl mx-auto p-4">
    <div class="space-y-4 mb-8">
      <h1 class="text-2xl font-bold mb-6 text-[#ededed]">
        👤 Receitas de {author}
      </h1>

      {recipes.map((recipe) => (
        <article class="border-b border-dashed border-[#262626] pb-4">
          <div class="flex items-start justify-between mb-2">
            <a href={`/${author}/${recipe.slug}`}>
              <h2 class="text-lg font-bold text-[#ededed] hover:text-blue-600 transition-colors">
                {recipe.title}
              </h2>
            </a>
          </div>

          <div class="flex items-center gap-4 text-xs text-[#a3a3a3] mb-2">
            <div class="flex items-center gap-1">🕐 {recipe.time}</div>
            <div class="flex items-center gap-1">👥 {recipe.serves}</div>
            <div class="flex items-center gap-1">👨‍🍳 {recipe.difficulty}</div>
          </div>

          <div class="flex flex-wrap gap-1">
            {recipe.tags.map(tag => (
              <span class="text-xs text-blue-600">#{tag}</span>
            ))}
          </div>
        </article>
      ))}

      {recipes.length === 0 && (
        <p class="text-[#a3a3a3] italic">Nenhuma receita encontrada.</p>
      )}
    </div>

    <Footer />
  </main>
</Layout>
